<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
                    xmlns:telerik="http://schemas.telerik.com/2008/xaml/presentation"
                    xmlns:local="clr-namespace:PoliceSMS;assembly=PoliceSMS"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
                    xmlns:navigation="clr-namespace:System.Windows.Controls;assembly=System.Windows.Controls.Navigation" 
                    xmlns:uriMapper="clr-namespace:System.Windows.Navigation;assembly=System.Windows.Controls.Navigation" 
                    xmlns:System="clr-namespace:System;assembly=mscorlib" 
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
		            xmlns:vsm="clr-namespace:System.Windows;assembly=System.Windows"
		            xmlns:animation="clr-namespace:Telerik.Windows.Controls.Animation;assembly=Telerik.Windows.Controls"
		            xmlns:transitions="clr-namespace:Telerik.Windows.Controls.TransitionEffects;assembly=Telerik.Windows.Controls"
                    mc:Ignorable="d">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="Brushes.xaml" />
        <ResourceDictionary Source="Fonts.xaml" />
        <ResourceDictionary Source="CoreStyles.xaml" />
        <ResourceDictionary Source="CommonStyles.xaml" />
        <ResourceDictionary Source="Window.xaml" />
        <ResourceDictionary Source="/Telerik.Windows.Themes.Metro;Component/Themes/Metro/System.Windows.CheckBox.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <!--
    ***************************************************************************
    A note about the width of the navigation app: this theme is designed to 
    max out at 960px. That keeps the content at a reasonable width on really
    big screens, but if you'd like to change it, it's easy to do! Just change
    the value of ContentMaxWidth (below). Or if you don't want a maxium width
    for the content, then just delete the lines where it shows up.
    ***************************************************************************
    -->
    <SolidColorBrush x:Key="HeaderBackground" Color="White" />
    <SolidColorBrush x:Key="HeaderPanelInnerBorder" Color="White" />
    <SolidColorBrush x:Key="HeaderPanelOuterBorder" telerik:MetroColors.Color="Accent"/>

    <System:Double x:Key="ContentMaxWidth">960</System:Double>
    <Style TargetType="TextBlock">
        <Setter Property="FontSize" Value="12"></Setter>
    </Style>
    <ControlTemplate TargetType="telerik:RadRadioButton" x:Key="RadRadioButtonTemplate">
        <Grid Background="Transparent">
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal"/>
                    <VisualState x:Name="MouseOver">
                        <Storyboard>
                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="text" d:IsOptimized="True"/>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Pressed">
                        <Storyboard>
                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="text" d:IsOptimized="True"/>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Disabled"/>
                    <VisualState x:Name="DisabledChecked" />
                    <VisualState x:Name="MouseOverChecked" />
                </VisualStateGroup>
                <VisualStateGroup x:Name="CheckStates">
                    <VisualState x:Name="Checked">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="text">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Visibility>Collapsed</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="text_checked" d:IsOptimized="True"/>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Unchecked" />
                </VisualStateGroup>
                <VisualStateGroup x:Name="FocusStatesGroup">
                    <VisualState x:Name="Unfocused"/>
                    <VisualState x:Name="Focused"/>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>

            <Grid>
                <TextBlock x:Name="text" Opacity="0.7" 
                        Visibility="Visible"
                        Text="{TemplateBinding Content}"
						Margin="{TemplateBinding Padding}"
                        Foreground="{TemplateBinding Foreground}"
						VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
						HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
                
                <TextBlock x:Name="text_checked" Opacity="0"
                        Text="{TemplateBinding Content}"
                        Margin="{TemplateBinding Padding}"
                        Foreground="{StaticResource AccentBrush}" 
						VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
						HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
            </Grid>

        </Grid>
    </ControlTemplate>
    <Style TargetType="telerik:RadRadioButton" x:Key="RadRadioButtonStyle">
        <Setter Property="Template" Value="{StaticResource RadRadioButtonTemplate}"/>
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Foreground" Value="{StaticResource MainBrush}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="3" />
    </Style>
    <Style TargetType="telerik:RadRadioButton" x:Key="RadRadioButtonLargeStyle" BasedOn="{StaticResource RadRadioButtonStyle}">
        
        <Setter Property="FontSize" Value="16" />
        <Setter Property="Margin" Value="10,0,0,0"/>
    </Style>
    <Style TargetType="telerik:RadRadioButton" x:Key="RadRadioButtonSmallStyle" BasedOn="{StaticResource RadRadioButtonStyle}">
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Margin" Value="20,4,0,0"/>
    </Style>
    
    <local:BoolToVisibilityConverter x:Key="boolToVis"></local:BoolToVisibilityConverter>

    <local:VisibilityToBoolConverter x:Key="VisToBool"></local:VisibilityToBoolConverter>

    <!--<local:VisitRightToEnable x:Key="visitRightToEnable"></local:VisitRightToEnable>-->


    <Style TargetType="CheckBox" BasedOn="{StaticResource CheckBoxStyle}" />

    <Style x:Key="gridViewColumnNumericAlignment" TargetType="telerik:GridViewDataColumn" >
        <Setter  Property="TextBlock.TextAlignment" Value="Right" />
    </Style>

    <telerik:MetroTheme x:Key="STheme"></telerik:MetroTheme>

    <Style x:Key="RichTextBoxStyle1" TargetType="RichTextBox">
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Background" Value="#FFFFFFFF"/>
        <Setter Property="Foreground" Value="#FF000000"/>
        <Setter Property="Padding" Value="2"/>
        <Setter Property="BorderBrush">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#FFA3AEB9" Offset="0"/>
                    <GradientStop Color="#FF8399A9" Offset="0.375"/>
                    <GradientStop Color="#FF718597" Offset="0.375"/>
                    <GradientStop Color="#FF617584" Offset="1"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RichTextBox">
                    <Grid x:Name="RootElement">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver"/>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="DisabledVisualElement">
                                            <SplineDoubleKeyFrame KeyTime="0" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="ReadOnly">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ReadOnlyVisualElement">
                                            <SplineDoubleKeyFrame KeyTime="0" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused"/>
                                <VisualState x:Name="Unfocused"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ValidationStates">
                                <VisualState x:Name="Valid"/>
                                <VisualState x:Name="InvalidUnfocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ValidationErrorElement">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="InvalidFocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ValidationErrorElement">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsOpen" Storyboard.TargetName="validationTooltip">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <System:Boolean>True</System:Boolean>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="1" Opacity="1">
                            <Grid>
                                <Border x:Name="ReadOnlyVisualElement" Background="#72F7F7F7" Opacity="0"/>
                                <Border x:Name="MouseOverBorder" BorderBrush="Transparent" BorderThickness="1">
                                    <ScrollViewer x:Name="ContentElement" BorderThickness="0" IsTabStop="False" Padding="{TemplateBinding Padding}"/>
                                </Border>
                            </Grid>
                        </Border>
                        <Border x:Name="DisabledVisualElement" BorderBrush="#A5F7F7F7" BorderThickness="{TemplateBinding BorderThickness}" Background="#A5F7F7F7" IsHitTestVisible="False" Opacity="0"/>
                        <Border x:Name="FocusVisualElement" BorderBrush="#FFB8B8B8" BorderThickness="{TemplateBinding BorderThickness}" IsHitTestVisible="False" Margin="1" Opacity="0"/>
                        <Border x:Name="ValidationErrorElement" BorderBrush="#FFDB000C" BorderThickness="1" CornerRadius="1" Visibility="Collapsed">
                            <ToolTipService.ToolTip>
                                <ToolTip x:Name="validationTooltip" DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}" Placement="Right" PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" Template="{StaticResource ValidationToolTipTemplate}">
                                    <ToolTip.Triggers>
                                        <EventTrigger RoutedEvent="Canvas.Loaded">
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsHitTestVisible" Storyboard.TargetName="validationTooltip">
                                                        <DiscreteObjectKeyFrame KeyTime="0">
                                                            <DiscreteObjectKeyFrame.Value>
                                                                <System:Boolean>true</System:Boolean>
                                                            </DiscreteObjectKeyFrame.Value>
                                                        </DiscreteObjectKeyFrame>
                                                    </ObjectAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </EventTrigger>
                                    </ToolTip.Triggers>
                                </ToolTip>
                            </ToolTipService.ToolTip>
                            <Grid Background="Transparent" HorizontalAlignment="Right" Height="12" Margin="1,-4,-4,0" VerticalAlignment="Top" Width="12">
                                <Path Data="M 1,0 L6,0 A 2,2 90 0 1 8,2 L8,7 z" Fill="#FFDC000C" Margin="1,3,0,0"/>
                                <Path Data="M 0,0 L2,0 L 8,6 L8,8" Fill="#ffffff" Margin="1,3,0,0"/>
                            </Grid>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Thickness x:Key="AxisTitleMargin">10,3,10,3</Thickness>
    <Style x:Key="AxisTitleBorderStyle"
       TargetType="Border">
        <Setter Property="Margin"
            Value="0,5,0,0" />
        <Setter Property="CornerRadius"
            Value="2" />
        <Setter Property="BorderBrush">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0.5,1"
                                 StartPoint="0.5,0">
                    <GradientStop Color="Transparent"
                              Offset="0.3" />
                    <GradientStop Color="Black"
                              Offset="0.7" />
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderThickness"
            Value="2,0,2,2" />
    </Style>
    <Style x:Key="AxisTitleInnerBorderStyle"
       TargetType="Border">
        <Setter Property="CornerRadius"
            Value="1" />
    </Style>
    <Style x:Key="AxisTitleStyle"
       TargetType="telerik:AxisTitle">
        <Setter Property="HorizontalAlignment"
            Value="Center" />
        <Setter Property="VerticalAlignment"
            Value="Center" />
        <Setter Property="Margin"
            Value="{StaticResource AxisTitleMargin}" />
        <Setter Property="BorderStyle"
            Value="{StaticResource AxisTitleBorderStyle}" />
        <Setter Property="InnerBorderStyle"
            Value="{StaticResource AxisTitleInnerBorderStyle}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="telerik:AxisTitle">
                    <Border Style="{TemplateBinding BorderStyle}">
                        <Border Style="{TemplateBinding InnerBorderStyle}">
                            <ContentControl Margin="{TemplateBinding Margin}"
                                        FontFamily="{TemplateBinding FontFamily}"
                                        FontSize="{TemplateBinding FontSize}"
                                        Foreground="{TemplateBinding Foreground}"
                                        Content="{TemplateBinding Content}" />
                        </Border>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground"
            Value="Black" />
        <Setter Property="FontSize"
            Value="14" />
    </Style>

</ResourceDictionary>